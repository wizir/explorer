<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build">

    <PropertyGroup>
        
        <!--
            This property sets RT configuration method for fluent configuration.
            If you dont want to use attributes for some reason then here you can
            specify full-qualified configuration method name (including namespace, 
            type and method name, e.g. My.Assembly.Configuration.ConfigureTypings) 
            of method that consumes Reinforce.Typings.Fluent.ConfigurationBuilder type
            and is void (nothing returns). This method will be executed to build 
            types exporting configuration in fluent manner.
            Surely you can continue using attributes. Also fluent configuration methods
            could not provide a way to configure some specific things (generics parameters
            override and classes' TsBaseParam). However in this case fluent configuration
            would be preferred. It means that if member configuration is supplied both 
            in attributes and in fluent methods then configuration from fluent methods will
            be used.
        -->
        <RtConfigurationMethod>explorer.ReinforcedTypings.Configure</RtConfigurationMethod>

        <!--
            By default all of your typings will be located in single file specified by RtTargetFile.
            It may be heavy for large projects because you will get single large file containing signinficant
            part of TS sources. It could lead to various problems (e.g. monstrous SCM merges). 
            So here we have RtDivideTypesAmongFiles parameter that will make Reinforced.Typings 
            generate TS sources in C#/Java/somewhat-OO-language-manner (class per file) when set to true.
            
            Important! In case of using this setting, do not forget to add generated files to solution manually.
        -->
        <RtDivideTypesAmongFiles>true</RtDivideTypesAmongFiles>



        <!--
            Disables Reinforced.Typings generation on build. Use it when it is necessary to temporary disable 
            typings generation.
        -->
        <RtDisable>false</RtDisable>
        
    </PropertyGroup>

</Project>